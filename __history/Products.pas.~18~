unit Products;

interface

type
  TProducts = class
    public function getId(): Integer;
    public function getName(): String;
    public function getDescr(): String;
    public function getStock(): Integer;
    public function getPrice(): Integer;
    public procedure setId(_Id: Integer);
    public procedure setName(_Name: String);
    public procedure setDescr(_Descr: String);
    public procedure setStock(_Stock: Integer);
    public procedure setPrice(_Price: Integer);
    public procedure setProducts(_Id: Integer; _Name: String; _Descr: String; _Stock: Integer; _Price: Integer);
    private Id: Integer;
    private Name: String;
    private Descr: String;
    private Stock: Integer;
    private Price: Integer;
  end;
var
  objProducts: TProducts;

implementation
  //Getts
  function getId(): Integer;
  begin
    Result := objProducts.Id;
  end;
  function getName(): String;
  begin
    Result := objProducts.Name;
  end;
  function getDescr(): String;
  begin
    Result := objProducts.Descr;
  end;
  function getStock(): Integer;
  begin
    Result := objProducts.Stock;
  end;
  function getPrice(): Integer;
  begin
    Result := objProducts.Price;
  end;
  //Setts
  procedure setId(_Id: Integer);
  begin
    objProducts.Id := _Id;
  end;
  procedure setName(_Name: String);
  begin
    objProducts.Name := _Name;
  end;
  procedure setDescr(_Descr: String);
  begin
    objProducts.Descr := _Descr;
  end;
  procedure setStock(_Stock: Integer);
  begin
    objProducts.Stock := _Stock;
  end;
  procedure setPrice(_Price: Integer);
  begin
    objProducts.Price := _Price;
  end;
  procedure setProducts(_Id: Integer; _Name: String; _Descr: String; _Stock: Integer; _Price: Integer);
  begin
    objProducts.Id := _Id;
    objProducts.Name := _Name;
    objProducts.Descr := _Descr;
    objProducts.Stock := _Stock;
    objProducts.Price := _Price;
  end;
end.
